
///////////////////////////////////////////////////////////////////////////////////////////////////
//
// ИдентификаторНастройки - ссылка или УИН справочника настроек
// СтруктураОТборов  - отборы   
// СтруктураДополнительныхПараметров - дополнительные параметры в виде структуры
// 
//
// Возвращаемое значение
// структура
// Result - результат выполнения обработки 
// Headers  - заголовки для сервисов
// DescriptionErr - строка ОписаниеяОшибки
// additionalOptions - дополнительные параметры в виде структуры


Функция exec(ИдентификаторНастройки,СтруктураОТборов = неопределено,СтруктураДополнительныхПараметров = неопределено)  Экспорт

	Ответ = новый структура("Result,Headers,DescriptionErr,additionalOptions","");
	ВыполнитьАлгоритмОбщаяТочкаВхода(ИдентификаторНастройки,СтруктураОТборов,СтруктураДополнительныхПараметров,Ответ);
	
	возврат Ответ;

КонецФункции 



Процедура ВыполнитьАлгоритмОбщаяТочкаВхода(ИдентификаторНастройки,СтруктураОТборов,СтруктураДополнительныхПараметров,Ответ)  экспорт

НастройкаОбработки =  ПолучитьНастройки(ИдентификаторНастройки);

// логирование  вызова 
записыватьЖурнал = истина;

если записыватьЖурнал = истина тогда
	ЗаписьЖурналаРегистрации( "extInt_", УровеньЖурналаРегистрации.Информация, ,НастройкаОбработки , ""+НастройкаОбработки+" Start");

конецЕсли;
	
	
	Если не ЗначениеЗаполнено(НастройкаОбработки) Тогда
		Ответ.Вставить("DescriptionErr","ru='Не найдена настройка выполнения обработки.'");	
		// логирование  вызова 
		если записыватьЖурнал = истина тогда
			ЗаписьЖурналаРегистрации( "extInt_", УровеньЖурналаРегистрации.Информация, ,НастройкаОбработки , ""+НастройкаОбработки+" Не найдена настройка выполнения обработки.");

		конецЕсли;

		возврат ;
	КонецЕсли; 

		Если СтруктураДополнительныхПараметров= неопределено Тогда
	 
	 	  СтруктураДополнительныхПараметров = новый структура();
	 
	    КонецЕсли;
	  
	     ТаблицаНастроек = справочники.extНастройкиИнтеграцииСВнешнимиИсточниками.получитьОтборыОбработкиИзХранилища(НастройкаОбработки);
	    Если ТипЗнч(ТаблицаНастроек) = тип("ТаблицаЗначений") Тогда
		
			СтруктураДополнительныхПараметров.Вставить("ЛокальныйОтбор",ТаблицаНастроек);
					
		КонецЕсли; 

	
	
	Если ЗначениеЗаполнено(НастройкаОбработки.ВнешняяОбработка) Тогда
			 	

		АлгоритмВнешнейОбработки(НастройкаОбработки.ВнешняяОбработка,СтруктураОТборов,СтруктураДополнительныхПараметров,Ответ);
	ИначеЕсли ЗначениеЗаполнено(НастройкаОбработки.ИмяМодуля) Тогда
		
		АлгоритмОбщегоМодуляОбработки(НастройкаОбработки.имяМодуля,СтруктураОТборов,СтруктураДополнительныхПараметров,Ответ);

		
	Иначе
	
		АлгоритмСправочника(НастройкаОбработки,СтруктураОТборов,СтруктураДополнительныхПараметров,Ответ);	
	
	КонецЕсли;
	
	// логирование  вызова 
		если записыватьЖурнал = истина тогда
			ЗаписьЖурналаРегистрации( "extInt_", УровеньЖурналаРегистрации.Информация, ,НастройкаОбработки , ""+НастройкаОбработки+" Finish");

		конецЕсли;


КонецПроцедуры

Функция ПолучитьНастройки(ИдентификаторНастройки)

Если ТипЗнч(ИдентификаторНастройки) = Тип("СправочникСсылка.extНастройкиИнтеграцииСВнешнимиИсточниками") Тогда
	
	Возврат ИдентификаторНастройки ;

КонецЕсли; 	
	
 Возврат  справочники.extНастройкиИнтеграцииСВнешнимиИсточниками.НайтиПоРеквизиту("ИдентификаторНастройки",ИдентификаторНастройки);	

КонецФункции 


Процедура АлгоритмВнешнейОбработки(ВнешняяОбработка,СтруктураОТборов,СтруктураДополнительныхПараметров,Ответ)

	// подключение
	ОбработкаОбъект = ДополнительныеОтчетыИОбработки.ОбъектВнешнейОбработки(ВнешняяОбработка);

	Попытка
	   ОбработкаОбъект.ПолучитьДанные(СтруктураОТборов,СтруктураДополнительныхПараметров,Ответ);

	Исключение
	   Ответ.Вставить("DescriptionErr","ru='Не удалось выполнить внешнюю обработку."+ОписаниеОшибки()+"'");
	КонецПопытки;
	
КонецПроцедуры


Процедура АлгоритмСправочника( Настройка,СтруктураОТборов,СтруктураДополнительныхПараметров,Ответ)

	 ОбработкаОбъект = Настройка.ПолучитьОбъект();
	 	 
	Попытка
	   ОбработкаОбъект.ПолучитьДанные(СтруктураОТборов,СтруктураДополнительныхПараметров,Ответ);

	Исключение
	   Ответ.Вставить("DescriptionErr","ru='Не удалось выполнить внешнюю обработку."+ОписаниеОшибки()+"'");
	КонецПопытки;


КонецПроцедуры


Процедура АлгоритмОбщегоМодуляОбработки( имяМодуля,СтруктураОТборов,СтруктураДополнительныхПараметров,Ответ)

	модульОбработкиЗапроса = неопределено;
	
	Если метаданные.ОбщиеМодули.Найти( имяМодуля)<> Неопределено Тогда
		
	     модульОбработкиЗапроса = ОбщегоНазначения.ОбщийМодуль(имяМодуля);
	ИначеЕсли  метаданные.Обработки.Найти(имяМодуля)<> Неопределено Тогда
		 модульОбработкиЗапроса = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("Обработка." + имяМодуля)
	КонецЕсли;	 
		 
	Если модульОбработкиЗапроса = неопределено Тогда
	
		 Ответ.Вставить("DescriptionErr","ru='Не удалось выполнить внешнюю обработку. Не найден модуль");
	     возврат;
	КонецЕсли;
	 	 
	Попытка
	   модульОбработкиЗапроса.ПолучитьДанные(СтруктураОТборов,СтруктураДополнительныхПараметров,Ответ);

	Исключение
	   Ответ.Вставить("DescriptionErr","ru='Не удалось выполнить внешнюю обработку."+ОписаниеОшибки()+"'");
	КонецПопытки;


КонецПроцедуры

