
///////////////////////////////////////////////////////////////////////////////////////////////////
//
// СтруктураОТборов  - отборы   
// СтруктураДополнительныхПараметров - дополнительные параметры в виде структуры
// 
//
//
// Ответ - структура
// Result - результат выполнения обработки - таблица значений - данные простые типы
// описаниеОшибки - строка ОписаниеяОшибки
// ДополнительныеПараметры - дополнительные параметры в виде структуры


Процедура ПолучитьДанные(СтруктураОТборов,СтруктураДополнительныхПараметров,Ответ)  экспорт

	СхемаКомпоновки = ХранилищеСхемыКомпоновкиДанных.Получить();	
	НастройкиКомпоновкиДанных = ХранилищеНастроекКомпоновкиДанных.Получить();
		
	Если не ТипЗнч(СхемаКомпоновки) = Тип("СхемаКомпоновкиДанных") Тогда

	Ответ.вставить("ОписаниеОшибки","Отсутствует схема компоновки данных!");	
	возврат;
	КонецЕсли;	
		
		
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновки));
		
	Если НастройкиКомпоновкиДанных <> Неопределено Тогда
			КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновкиДанных);
			КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	Иначе
			КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
	КонецЕсли;
	
	///////////////////////////////////////////////////////////////////////
	// добавляем отборы переданные извне
	Если значениеЗаполнено(СтруктураОТборов) и
		ТипЗнч(СтруктураОТборов)= Тип("Структура")
		 Тогда
	     НастройкиКомпоновки = КомпоновщикНастроек.ПолучитьНастройки();
			Для каждого эл Из СтруктураОТборов Цикл
			  КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(НастройкиКомпоновки.Отбор,эл.Ключ, эл.Значение, ВидСравненияКомпоновкиДанных.Равно);
	
			КонецЦикла; 
			КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновки);
			КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);

	КонецЕсли; 
		

	
	
	//////////////////////////////////////////////////////////////////////	

		
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпоновки,
		КомпоновщикНастроек.ПолучитьНастройки(), , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"), Ложь);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,,,Истина);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;

	ДанныеОтчета = Новый ТаблицаЗначений();
	ПроцессорВывода.УстановитьОбъект(ДанныеОтчета);
	ДанныеОтчета = ПроцессорВывода.Вывести(ПроцессорКомпоновки);

	Ответ.вставить("Result",ДанныеОтчета);
	
	

КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если Не ЗначениеЗаполнено(ИдентификаторНастройки) и не ЭтотОбъект.ЭтоГруппа Тогда
	       Если ЗначениеЗаполнено(ссылка) Тогда
			   
			   ИдентификаторНастройки = ссылка.УникальныйИдентификатор();
		   Иначе
			   
			   
		       УИННового = новый УникальныйИдентификатор();
			   ИдентификаторНастройки =  УИННового;

			   СсылкаНового = справочники.extНастройкиИнтеграцииСВнешнимиИсточниками.ПолучитьСсылку(УИННового);	
			   ЭтотОбъект.УстановитьСсылкуНового(СсылкаНового);
		   КонецЕсли;
		
	
	КонецЕсли;
	
КонецПроцедуры



